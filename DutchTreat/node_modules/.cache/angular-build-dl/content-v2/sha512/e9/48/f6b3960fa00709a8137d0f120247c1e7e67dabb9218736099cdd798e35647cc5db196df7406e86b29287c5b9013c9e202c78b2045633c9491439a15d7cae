{"version":3,"sources":["webpack:///ClientApp/app/shop/productList.component.ts","webpack:///ClientApp/app/shop/productList.component.html","webpack:///ClientApp/environments/environment.ts","webpack:///ClientApp/app/app.component.ts","webpack:///ClientApp/app/app.component.html","webpack:///ClientApp/app/app.module.ts","webpack:///ClientApp/app/shared/order.ts","webpack:///ClientApp/main.ts","webpack:///ClientApp/app/shared/dataService.ts","webpack:///ClientApp/app/shop/cart.component.ts","webpack:///ClientApp/app/shop/cart.component.html","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ProductList","data","products","loadProducts","subscribe","success","product","AddToOrder","selector","templateUrl","styleUrls","environment","production","AppComponent","title","styles","AppModule","declarations","imports","providers","bootstrap","Order","orderDate","Date","items","Array","OrderItem","bootstrapModule","err","console","error","DataService","http","order","get","pipe","newProduct","item","find","i","productId","id","quantity","productArtist","artist","productArtId","artId","productCategory","category","productSize","size","productTitle","unitPrice","price","push","Cart","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from \"../shared/product\";\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: [\"productList.component.css\"]\r\n})\r\nexport class ProductList implements OnInit {\r\n\r\n    constructor(private data: DataService) {\r\n    \r\n    }\r\n\r\n    public products: Product[] = [];\r\n    ngOnInit(): void {\r\n        this.data.loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.data.products;\r\n                }\r\n            });\r\n    }\r\n    addProduct(product: Product) {\r\n        this.data.AddToOrder(product);\r\n    }\r\n        \r\n}","<div class=\"row\">\r\n\r\n\r\n    <div class=\"product-info col-md-4\" *ngFor=\"let p of products\">\r\n        <div class=\"card bg-light p-1 m-1\">\r\n            <img src=\"/img/{{ p.artId }}.jpg\" class=\"img-fluid\" [alt]=\"p.title\" />\r\n            <div class=\"product-name\">{{ p.category }} - {{ p.size }} </div>\r\n            <ul class=\"product-props\">\r\n                <li><strong>Price</strong>: {{ p.price | currency:\"USD\":true }}</li>\r\n                <li><strong>Artist</strong>: {{ p.artist }}</li>\r\n                <li><strong>Title</strong>: {{ p.title }}</li>\r\n                <li><strong>Description</strong>: {{ p.artDescription }}</li>\r\n            </ul>\r\n            <button id=\"buyButton\" class=\"btn btn-success\" (click)=\"addProduct(p)\">Buy</button>\r\n        </div>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'DutchTreat';\n}\n","<div class=\"row\">\r\n    <div class=\"col-md-8\">\r\n        <h3>{{ title }}</h3>\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <div class=\"card bg-light p-2\">\r\n        <the-cart></the-cart>\r\n       </div>\r\n    </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppComponent } from './app.component';\nimport { ProductList } from './shop/productList.component';\nimport { DataService } from \"./shared/dataService\";\nimport { Cart } from \"./shop/cart.component\";\n\n@NgModule({\n  declarations: [\n        AppComponent,\n        ProductList,\n        Cart\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule\n  ],\n    providers: [\n        DataService\n    ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class  Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n}\r\n\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}\r\n\r\n\r\n\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Product } from \"./product\";\r\nimport { Order, OrderItem } from \"./order\";\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n    public order: Order = new Order();\r\n    public products: Product[] = [];\r\n\r\n    loadProducts(): Observable<boolean>{\r\n        return this.http.get(\"/api/products\")\r\n            .pipe(\r\n                map((data: any[]) => {\r\n                    this.products = data;\r\n                    return true;\r\n                }))\r\n    }\r\n    public AddToOrder(newProduct: Product) {\r\n        let item: OrderItem = this.order.items.find(i => i.productId == newProduct.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        } else {\r\n\r\n            \r\n            item = new OrderItem();\r\n            item.productId = newProduct.id;\r\n            item.productArtist = newProduct.artist;\r\n            item.productArtId = newProduct.artId;\r\n            item.productCategory = newProduct.category;\r\n            item.productSize = newProduct.size;\r\n            item.productTitle = newProduct.title;\r\n            item.unitPrice = newProduct.price;\r\n            item.quantity = 1;\r\n            this.order.items.push(item);\r\n        }\r\n        \r\n    } \r\n\r\n}","import { Component } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class Cart {\r\n    constructor(public data: DataService) {\r\n\r\n    }\r\n\r\n}","<h3>Shopping Cart</h3>\r\n<div>#/Items: {{ data.order.items.length }}</div>\r\n<table class=\"table table-condensed table-hover\">\r\n    <thead>\r\n        <tr>\r\n            <td>Product</td>\r\n            <td>#</td>\r\n            <td>$</td>\r\n            <td>Total</td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let o of data.order.items\">\r\n            <td>{{ o.productCategory }} - {{ o.productTitle }} </td>\r\n            <td>{{ o.quantity }}</td>\r\n            <td>{{ o.unitPrice | currency:\"USD\":true }}</td>\r\n            <td>{{ (o.unitPrice * o.quantity) | currency:\"USD\":true }}</td>\r\n        </tr>\r\n    </tbody>\r\n\r\n</table>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}